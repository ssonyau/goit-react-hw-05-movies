{"version":3,"file":"static/js/158.55d9b128.chunk.js","mappings":"oIAAA,IAAMA,EAAW,+BACXC,EAAM,mCAaZ,IAXmB,SAACC,GAAmC,IAAxBC,EAAuB,uDAAP,GAC7C,OAAOC,MAAM,GAAD,OAAIJ,EAAJ,YAAgBE,EAAhB,oBAAqCD,EAArC,YAA4CE,IAAiBE,MACvE,SAAAC,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,iOAElB,OAAOF,EAASG,MACjB,GAEJ,C,yICVYC,EAAcC,EAAAA,GAAAA,MAAH,8KAQXC,EAASD,EAAAA,GAAAA,OAAH,2Q,SC8CnB,EAhDe,WAAO,IAAD,EACnB,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,CAAC,GAAzD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACzCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACU,KAAdJ,IAEJK,EAAAA,EAAAA,GAZc,eAYQP,GACnBZ,MAAK,SAAAoB,GACJV,EAAgBU,EAAIC,QACrB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACT,EAAWF,IASf,OACE,4BACE,kBAAMc,SATS,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,OAAOF,MACxBG,EAA6B,KAAjBH,EAAMI,OAAgB,CAAC,EAAI,CAAEC,MAAOL,GACtDhB,EAAgBmB,EACjB,EAIG,WACE,SAAC3B,EAAD,CAAa8B,KAAK,OAAOC,KAAK,SAASC,YAAY,mBACnD,SAAC9B,EAAD,CAAQ4B,KAAK,SAAb,uBAGuB,IAAxB1B,EAAa6B,SACZ,0BACE,wBACG7B,EAAa8B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAChB,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO3B,EAA1B,UACE,uBAAIyB,OAFCD,EADO,UAY7B,C","sources":["Api/API.js","pages/Movies.styled.js","pages/Movies.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'a5426bdbaf9156d8939bf87c1cb6ad6c';\n\nconst fetchQuery = (QUERY_URL, searchOptions = '') => {\n  return fetch(`${BASE_URL}/${QUERY_URL}?api_key=${KEY}&${searchOptions}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error('помилка на сервері або неправильний запит');\n      }\n      return response.json();\n    }\n  );\n};\n\nexport default fetchQuery;\n","import styled from 'styled-components';\n\nexport const InputSearch = styled.input`\n  font-size: 20px;\n  padding: 10px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  border: solid 1px rgb(0, 1, 0, 0.24);\n  border-radius: 7px;\n`;\n\nexport const Button = styled.button`\n  font-size: 20px;\n  padding: 10px;\n  margin-left: 10px;\n  cursor: pointer;\n  border-radius: 7px;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  border: solid 1px rgb(0, 1, 0, 0.24);\n\n  :active {\n    background-color: orange;\n  }\n`;\n","import fetchQuery from 'Api/API';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { Button, InputSearch } from './Movies.styled';\n\n//* запит згідно з API\nconst QUERY_URL = 'search/movie';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams({});\n\n  const movieName = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (movieName === '') return;\n\n    fetchQuery(QUERY_URL, searchParams)\n      .then(res => {\n        setSearchMovies(res.results);\n      })\n      .catch(error => console.log(error));\n  }, [movieName, searchParams]);\n\n  const submitForm = e => {\n    e.preventDefault();\n    const value = e.target.search.value;\n    const searchOpt = value.trim() === '' ? {} : { query: value };\n    setSearchParams(searchOpt);\n  };\n\n  return (\n    <div>\n      <form onSubmit={submitForm}>\n        <InputSearch type=\"text\" name=\"search\" placeholder=\"Search movies\" />\n        <Button type=\"submit\">Search</Button>\n      </form>\n\n      {searchMovies.length !== 0 && (\n        <div>\n          <ul>\n            {searchMovies.map(({ id, title }) => (\n              <li key={id}>\n                <Link to={`${id}`} state={location}>\n                  <p>{title}</p>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","KEY","QUERY_URL","searchOptions","fetch","then","response","ok","Error","json","InputSearch","styled","Button","useState","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","movieName","get","location","useLocation","useEffect","fetchQuery","res","results","catch","error","console","log","onSubmit","e","preventDefault","value","target","search","searchOpt","trim","query","type","name","placeholder","length","map","id","title","to","state"],"sourceRoot":""}