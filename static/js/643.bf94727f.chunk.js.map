{"version":3,"file":"static/js/643.bf94727f.chunk.js","mappings":"6OAiCA,EAzBkB,SAAC,GAAuC,IAArCA,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACpC,OACE,UAAC,KAAD,WACGA,GACC,gBACEC,IAAG,yCAAoCD,GACvCE,IAAKJ,KAGP,SAAC,KAAD,wBAGF,UAAC,KAAD,YACE,wBAAKA,KACL,sCAAcC,UAIrB,ECKD,EA1Ba,WACX,OAAkCI,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GASR,OAPAE,EAAAA,EAAAA,YAAU,YACKC,EAAAA,EAAAA,IAAeH,GACvBI,MAAK,SAAAC,GACRN,EAAaM,EAAEC,KAChB,GACF,GAAE,CAACN,KAGF,yBACGF,GACCA,EAAUS,KAAI,SAACC,EAAOC,GAAR,OACZ,SAAC,EAAD,CAEEjB,KAAMgB,EAAMhB,KACZC,UAAWe,EAAMf,UACjBC,aAAcc,EAAMd,cAHfgB,OAAO,GAAD,OAAIF,EAAMR,IAAV,OAAeS,IAFhB,KAUrB,C,uLC1BYE,EAAYC,EAAAA,GAAAA,IAAH,gFAKTC,EAAsBD,EAAAA,GAAAA,IAAH,4IAQnBE,EAAuBF,EAAAA,GAAAA,IAAH,4CAGpBG,EAAsBH,EAAAA,GAAAA,IAAH,gIAMnBI,EAAaJ,EAAAA,GAAAA,OAAH,yN","sources":["components/ActorCard.jsx","components/Cast.jsx","components/MovieCard.styled.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  PhotoPlaceholderw92,\n  DescriptionContainer,\n} from './MovieCard.styled';\n\nconst ActorCard = ({ name, character, profile_path }) => {\n  return (\n    <Container>\n      {profile_path ? (\n        <img\n          src={`https://image.tmdb.org/t/p/w92/${profile_path}`}\n          alt={name}\n        />\n      ) : (\n        <PhotoPlaceholderw92>no image</PhotoPlaceholderw92>\n      )}\n\n      <DescriptionContainer>\n        <h3>{name}</h3>\n        <p>Character:{character}</p>\n      </DescriptionContainer>\n    </Container>\n  );\n};\nActorCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string,\n  profile_path: PropTypes.string,\n};\n\nexport default ActorCard;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { movieCastFetch } from 'API';\nimport ActorCard from './ActorCard';\n\nconst Cast = () => {\n  const [movieCast, setmovieCast] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const Cast = movieCastFetch(id);\n    Cast.then(e => {\n      setmovieCast(e.cast);\n    });\n  }, [id]);\n\n  return (\n    <div>\n      {movieCast &&\n        movieCast.map((actor, i) => (\n          <ActorCard\n            key={Number(`${actor.id}${i}`)}\n            name={actor.name}\n            character={actor.character}\n            profile_path={actor.profile_path}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default Cast;\n","import styled from \"styled-components\";\n\n\nexport const Container = styled.div`\ndisplay:flex;\npadding-left:10px;\nmargin-bottom:10px;\n`\nexport const PhotoPlaceholderw92 = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items:center;\nwidth:92px;\nheight:138px;\nbackground-color: gray;\n`\nexport const DescriptionContainer = styled.div`\npadding-left:20px;\n`\nexport const AdditionInfoSection = styled.div`\nborder-top: 1px solid black;\nborder-bottom: 1px solid black;\nmargin-bottom:10px;\npadding-left:10px;\n`\nexport const ButtonLink = styled.button`\ndisplay:inline-block;\ntext-decoration:none;\npadding:0;\nmargin:10px;\nbackground-color:grey;\n> a {\n    text-decoration: none;\n    display:block;\n    height:100%;\n    padding:5px;\n\n  }\n`\n"],"names":["name","character","profile_path","src","alt","useState","movieCast","setmovieCast","id","useParams","useEffect","movieCastFetch","then","e","cast","map","actor","i","Number","Container","styled","PhotoPlaceholderw92","DescriptionContainer","AdditionInfoSection","ButtonLink"],"sourceRoot":""}